---
version: 2.1
orbs:
  # rafay: rafaysystems/rafay@1.0.5
  terraform: circleci/terraform@1.2.1
  slack: circleci/slack@4.0
workflows:
  version: 2
  production_infrastructure:
    jobs:
      - terraform_init_plan_production
      - pause_workflow:
          type: approval
          requires:
            - terraform_init_plan_production
      - terraform_apply_production:
          requires:
            - pause_workflow
      - plan-destroy:
          requires:
            - terraform_apply_production
      - destroy:
          requires:
            - plan_destroy
jobs:
  terraform_init_plan_production:
    description: Inits terraform directory for staging
    # working_directory: 
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -input=false
      - run: terraform workspace select betul_test
      - run:
          name: terraform plan
          command: |
            terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  terraform_apply_production:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run: terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform destroy -auto-approve tfdestroy


      # - slack/status:
      #     failure_message: "Deployment of << parameters.stack-name >> to <<parameters.env >> has failed!"
      #     success_message: "Deployment of << parameters.stack-name >> to <<parameters.env >> has succeeded!"



# version: 2
# orbs:
#   slack: circleci/slack@4.3.1

# jobs:
#   plan-apply:
#     working_directory: /tmp/project
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - checkout
#       - run:
#           name: terraform init & plan
#           command: |
#             terraform init -input=false
#             terraform plan -out tfapply   # -var-file terraform.tfvars
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .
#       # - slack/status
#       #   fail_only: false
#       #   failure_message: nope 
#       #   success_message: good job

#   apply:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform
#           command: |
#             terraform apply -auto-approve tfapply
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   plan-destroy:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform create destroy plan
#           command: |
#             terraform plan -destroy -out tfdestroy
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   destroy:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform destroy
#           command: |
#             terraform apply -auto-approve tfdestroy

# workflows:
#   version: 2
#   plan_approve_apply:
#     jobs:
#       - plan-apply
#       - hold-apply:
#           type: approval
#           requires:
#             - plan-apply
#       - apply:
#           requires:
#             - hold-apply
#       - plan-destroy:
#           requires:
#             - apply
#       - hold-destroy:
#           type: approval
#           requires:
#             - plan-destroy
#       - destroy:
#           requires:
#             - hold-destroy
